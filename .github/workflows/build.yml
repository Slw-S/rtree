name: Build

on:
  pull_request:
    branches:
    - '*'

jobs:
  conda:
    name: Conda ${{ matrix.python-version }} - ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.8']
        sidx-version: ['1.8.5','1.9.3']

    steps:
    - uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1.1.2
      with:
        channels: conda-forge
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Setup
      shell: bash -l {0}
      run: |
          conda install -c conda-forge numpy libspatialindex=${{ matrix.sidx-version }} -y

    - name: Install
      shell: bash -l {0}
      run: |
        pip install -e .
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        pip install flake8
        flake8 rtree/
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        pip install pytest
        python -m pytest --doctest-modules rtree tests

  ubuntu:
    name: Ubuntu ${{ matrix.os }}

    runs-on: ubuntu-16.04
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-16.04', 'ubuntu-18.04']

    steps:
    - uses: actions/checkout@v2
    - name: Setup
      shell: bash -l {0}
      run: |
          sudo apt install libspatialindex-c4v5 python3-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools numpy flake8 pytest

    - name: Build
      shell: bash -l {0}
      run: |
        python3 -m pip install --user .
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        export PATH=$PATH:/home/runner/.local/bin
        flake8 rtree/
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        python3 -m pytest --doctest-modules rtree tests


  linux-wheel:
    name: Linux Wheels

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v2
    - name: Build
      shell: bash -l {0}
      run: |
          docker run -v $(pwd):/src quay.io/pypa/manylinux1_x86_64 /src/build-wheel.sh

  windows-wheel:
    name: Windows Wheels

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['windows-latest']
        python-version: ['3.6','3.7','3.8']
        sidx-version: ['1.9.3']
      fail-fast: true

    steps:
    - uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1.1.2
      with:
        channels: conda-forge
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Setup
      shell: bash -l {0}
      run: |
          conda install -c conda-forge compilers -y
          pip install cmake ninja

    - name: build
      shell: cmd /C CALL "{0}"
      run: |
        .\build-wheel.bat ${{ matrix.sidx-version }}

  docs:
    name: Docs

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    container: osgeo/proj-docs

    steps:
    - uses: actions/checkout@v2
    - name: Print versions
      shell: bash -l {0}
      run: |
          python3 --version
          sphinx-build --version
    - name: Lint .rst files
      shell: bash -l {0}
      run: |
        if find . -name '*.rst' | xargs grep -P '\t'; then echo 'Tabs are bad, please use four spaces in .rst files.'; false; fi
      working-directory: ./docs
    - name: HTML
      shell: bash -l {0}
      run: |
        make html
      working-directory: ./docs
    - name: PDF
      shell: bash -l {0}
      run: |
        make latexpdf
      working-directory: ./docs

